{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:3010/connect';\n    this.jsonContent = '';\n  }\n  getLogin(login) {\n    this.jsonContent = login.toString();\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    /*this.http.post(this.url, this.jsonContent, httpOptions)\n          .subscribe(response => console.log(response));*/\n    this.jsonContent = JSON.stringify({\n      id: login.getUserName(),\n      password: login.getPassword(),\n      rol: login.getArea()\n    });\n    console.log(this.jsonContent);\n    /*this.http.post(this.url, this.jsonContent, httpOptions)\n    .subscribe(response => {console.log(response)\n    });*/\n    return this.http.post(this.url, this.jsonContent, httpOptions);\n  }\n  putCerrarConexionDB(cerrar) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post('http://localhost:3010/disconnect', this.jsonContent, httpOptions);\n  }\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHxB,QAAG,GAAG,+BAA+B;IAInC,IAAI,CAACC,WAAW,GAAC,EAAE;EACrB;EAGCC,QAAQ,CAACC,KAAW;IACjB,IAAI,CAACF,WAAW,GAACE,KAAK,CAACC,QAAQ,EAAE;IACjC,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIT,WAAW,CAAC;QACrB,cAAc,EAAE;OACf;KACJ;IACL;;IAEM,IAAI,CAACI,WAAW,GAACM,IAAI,CAACC,SAAS,CAAC;MAAEC,EAAE,EAAEN,KAAK,CAACO,WAAW,EAAE;MAAEC,QAAQ,EAAER,KAAK,CAACS,WAAW,EAAE;MAACC,GAAG,EAACV,KAAK,CAACW,OAAO;IAAE,CAAE,CAAC;IAC/GC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,WAAW,CAAC;IAC7B;;;IAKA,OAAQ,IAAI,CAACD,IAAI,CAACiB,IAAI,CAAC,IAAI,CAACC,GAAG,EAAE,IAAI,CAACjB,WAAW,EAAEI,WAAW,CAAC;EACtE;EAEAc,mBAAmB,CAACC,MAAa;IAChC,MAAMf,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIT,WAAW,CAAC;QACrB,cAAc,EAAE;OACf;KACJ;IACD,OAAQ,IAAI,CAACG,IAAI,CAACiB,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAChB,WAAW,EAAEI,WAAW,CAAC;EAC5F;EAAC;qBApCSP,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAuB,SAAZvB,YAAY;IAAAwB,YAFX;EAAM","names":["HttpHeaders","LoginService","constructor","http","jsonContent","getLogin","login","toString","httpOptions","headers","JSON","stringify","id","getUserName","password","getPassword","rol","getArea","console","log","post","url","putCerrarConexionDB","cerrar","factory","providedIn"],"sourceRoot":"","sources":["/home/eiler/Documentos/proyectosPruebas/frontendcafeteria/src/app/Service/login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Login } from '../Modelo/Login';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  url = 'http://localhost:3010/connect';\n  admin: any;\n  jsonContent: string;\n  constructor(private http: HttpClient) {\n    this.jsonContent='';\n  }\n  \n\n   getLogin(login:Login ){\n      this.jsonContent=login.toString();\n      const httpOptions = {\n        headers: new HttpHeaders({\n            'Content-Type': 'application/json'\n            })\n        };\n    /*this.http.post(this.url, this.jsonContent, httpOptions)\n          .subscribe(response => console.log(response));*/\n          this.jsonContent=JSON.stringify({ id: login.getUserName(), password: login.getPassword(),rol:login.getArea() });\n          console.log(this.jsonContent);\n          /*this.http.post(this.url, this.jsonContent, httpOptions)\n          .subscribe(response => {console.log(response)          \n        });*/\n\n          \n          return  this.http.post(this.url, this.jsonContent, httpOptions)\n   }\n\n   putCerrarConexionDB(cerrar:String){\n    const httpOptions = {\n      headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n          })\n      };\n      return  this.http.post('http://localhost:3010/disconnect', this.jsonContent, httpOptions)\n   }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}