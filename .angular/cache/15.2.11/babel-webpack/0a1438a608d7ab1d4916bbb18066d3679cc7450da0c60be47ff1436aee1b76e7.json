{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../Service/cajas.service\";\nexport class ManagerHomepageComponent {\n  constructor(router, servicioCajas) {\n    this.router = router;\n    this.servicioCajas = servicioCajas;\n  }\n  ngOnInit() {\n    let area = localStorage.getItem(\"area\");\n    if (area) {\n      if (area == \"1\") {\n        this.router.navigate([\"areaBodega\"]);\n      } else if (area == \"2\") {\n        this.router.navigate([\"areaInventario\"]);\n      } else if (area == \"3\") {\n        this.router.navigate([\"areaBodega\"]);\n      } else if (area == \"4\") {\n        this.servicioCajas.getCajaUsuario(this.getRolDB(), this.getIdUser()).subscribe(data => {\n          localStorage.setItem(\"codigocaja\", data.codigocaja);\n          this.router.navigate([\"areaCajero\"]);\n        }, error => {\n          console.log(error);\n          alert(\"Parece que tu usuario no esta asignado a una caja, por favor comunicate con el administrador\");\n          localStorage.removeItem(\"usuario\");\n          localStorage.removeItem(\"area\");\n          this.router.navigate([\"login\"]);\n        });\n      }\n    } else {\n      this.router.navigate([\"login\"]);\n    }\n  }\n  getRolDB() {\n    let stringUser = localStorage.getItem('usuario');\n    let usuario = stringUser ? JSON.parse(stringUser) : null;\n    let rol = usuario ? usuario.rol : 0;\n    return rol;\n  }\n  getIdUser() {\n    let stringUser = localStorage.getItem('usuario');\n    let usuario = stringUser ? JSON.parse(stringUser) : null;\n    let id = usuario ? usuario.identificacion : 0;\n    return id;\n  }\n  static #_ = this.ɵfac = function ManagerHomepageComponent_Factory(t) {\n    return new (t || ManagerHomepageComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CajasService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ManagerHomepageComponent,\n    selectors: [[\"app-manager-homepage\"]],\n    decls: 0,\n    vars: 0,\n    template: function ManagerHomepageComponent_Template(rf, ctx) {}\n  });\n}","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,wBAAwB;EAEnCC,YAAoBC,MAAc,EAAUC,aAA0B;IAAlD,WAAM,GAAND,MAAM;IAAkB,kBAAa,GAAbC,aAAa;EAAiB;EAE1EC,QAAQ;IACN,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAEvC,IAAKF,IAAI,EAAE;MACT,IAAIA,IAAI,IAAI,GAAG,EAAE;QACf,IAAI,CAACH,MAAM,CAACM,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;OACrC,MAAM,IAAIH,IAAI,IAAI,GAAG,EAAE;QACtB,IAAI,CAACH,MAAM,CAACM,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;OACzC,MAAM,IAAIH,IAAI,IAAI,GAAG,EAAE;QACtB,IAAI,CAACH,MAAM,CAACM,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;OACrC,MAAM,IAAIH,IAAI,IAAI,GAAG,EAAE;QACtB,IAAI,CAACF,aAAa,CAACM,cAAc,CAAC,IAAI,CAACC,QAAQ,EAAE,EAAC,IAAI,CAACC,SAAS,EAAE,CAAC,CAACC,SAAS,CAACC,IAAI,IAAE;UAClFP,YAAY,CAACQ,OAAO,CAAC,YAAY,EAACD,IAAI,CAACE,UAAU,CAAC;UAClD,IAAI,CAACb,MAAM,CAACM,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;QACtC,CAAC,EAACQ,KAAK,IAAE;UACPC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;UAClBG,KAAK,CAAC,8FAA8F,CAAC;UACrGb,YAAY,CAACc,UAAU,CAAC,SAAS,CAAC;UAClCd,YAAY,CAACc,UAAU,CAAC,MAAM,CAAC;UAC/B,IAAI,CAAClB,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAEjC,CAAC,CAAC;;KAGL,MACI;MACH,IAAI,CAACN,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;EAEnC;EAEAE,QAAQ;IACN,IAAIW,UAAU,GAAGf,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAChD,IAAIe,OAAO,GAAWD,UAAU,GAAEE,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC,GAAC,IAAI;IAC7D,IAAII,GAAG,GAAGH,OAAO,GAAEA,OAAO,CAACG,GAAG,GAAC,CAAC;IAChC,OAAOA,GAAG;EACZ;EAEAd,SAAS;IACP,IAAIU,UAAU,GAAGf,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAChD,IAAIe,OAAO,GAAWD,UAAU,GAAEE,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC,GAAC,IAAI;IAC7D,IAAIK,EAAE,GAACJ,OAAO,GAAEA,OAAO,CAACK,cAAc,GAAC,CAAC;IACxC,OAAOD,EAAE;EACX;EAAC;qBA9CU1B,wBAAwB;EAAA;EAAA;UAAxBA,wBAAwB;IAAA4B;IAAAC;IAAAC;IAAAC;EAAA","names":["ManagerHomepageComponent","constructor","router","servicioCajas","ngOnInit","area","localStorage","getItem","navigate","getCajaUsuario","getRolDB","getIdUser","subscribe","data","setItem","codigocaja","error","console","log","alert","removeItem","stringUser","usuario","JSON","parse","rol","id","identificacion","selectors","decls","vars","template"],"sourceRoot":"","sources":["/home/eiler/Documentos/proyectosPruebas/frontendcafeteria/src/app/manager-homepage/manager-homepage.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CajasService } from '../Service/cajas.service';\nimport { Usuario } from '../Modelo/Usuario';\nimport { data, error } from 'jquery';\n@Component({\n  selector: 'app-manager-homepage',\n  template: ``,\n  styles: [``]\n})\nexport class ManagerHomepageComponent implements OnInit {\n\n  constructor(private router: Router, private servicioCajas:CajasService) { }\n\n  ngOnInit(): void {\n    let area = localStorage.getItem(\"area\");\n\n    if ( area) {\n      if (area == \"1\") {\n        this.router.navigate([\"areaBodega\"])\n      } else if (area == \"2\") {\n        this.router.navigate([\"areaInventario\"])\n      } else if (area == \"3\") {\n        this.router.navigate([\"areaBodega\"])\n      } else if (area == \"4\") {\n        this.servicioCajas.getCajaUsuario(this.getRolDB(),this.getIdUser()).subscribe(data=>{\n          localStorage.setItem(\"codigocaja\",data.codigocaja);\n          this.router.navigate([\"areaCajero\"])\n        },error=>{\n          console.log(error);\n          alert(\"Parece que tu usuario no esta asignado a una caja, por favor comunicate con el administrador\")\n          localStorage.removeItem(\"usuario\")\n          localStorage.removeItem(\"area\")\n          this.router.navigate([\"login\"])\n\n        })\n        \n      }\n    }\n    else {\n      this.router.navigate([\"login\"])\n    }\n  }\n\n  getRolDB():number{\n    let stringUser = localStorage.getItem('usuario');\n    let usuario:Usuario = stringUser? JSON.parse(stringUser):null;\n    let rol = usuario? usuario.rol:0;\n    return rol;\n  }\n\n  getIdUser():number{\n    let stringUser = localStorage.getItem('usuario');\n    let usuario:Usuario = stringUser? JSON.parse(stringUser):null;\n    let id=usuario? usuario.identificacion:0;\n    return id;\n  }\n\n  // redireccionar(resp: any, area: String): void {\n  //   if (resp == null) {\n  //     this.mostrarAlert = true;\n  //   }\n  //   if (area == \"1\") {\n  //     this.administrador = resp;\n  //     console.log(this.administrador.email)\n  //     this.router.navigate([\"areaAdministrador\"])\n  //   } else if (area == \"2\") {\n  //     this.medico = resp;\n  //     console.log(this.medico.email)\n  //   } else if (area == \"3\") {\n  //     this.paciente = resp;\n  //   } else if (area == \"4\") {\n  //     this.laboratorio = resp;\n  //   }\n  // }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}